name: Build & Deploy Pages (root + /dev)

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Prepare worktrees for both branches
        run: |
          set -euo pipefail
          git fetch --all --prune
          mkdir -p worktrees
          if git show-ref --verify --quiet refs/remotes/origin/main; then
            git worktree add worktrees/main origin/main
          fi
          if git show-ref --verify --quiet refs/remotes/origin/dev; then
            git worktree add worktrees/dev origin/dev
          fi

      # ===== Build MAIN → combined/_root =====
      - name: Build MAIN (root -> https://aaroonparas.com/)
        if: ${{ hashFiles('worktrees/main/**') != '' }}
        working-directory: worktrees/main
        run: |
          set -euo pipefail
          npm ci
          npm run build
          mkdir -p "$GITHUB_WORKSPACE/output/root"
          rsync -a --delete dist/ "$GITHUB_WORKSPACE/output/root/"

      # ===== Build DEV → combined/dev (base=/dev -> https://aaroonparas.com/dev/) =====
      - name: Build DEV (/dev -> https://aaroonparas.com/dev/)
        if: ${{ hashFiles('worktrees/dev/**') != '' }}
        working-directory: worktrees/dev
        env:
          PUBLIC_URL: /dev/
          BASE_URL: /dev/
          VITE_BASE: /dev/
          NEXT_PUBLIC_BASE_PATH: /dev/
          GATSBY_PATH_PREFIX: /dev/
        run: |
          set -euo pipefail
          # Adjust the build command if your framework requires a different base/path flag.
          npm ci
          npm run build -- --base=/dev/
          mkdir -p "$GITHUB_WORKSPACE/output/dev"
          rsync -a --delete dist/ "$GITHUB_WORKSPACE/output/dev/"

      # ===== Assemble combined artifact =====
      - name: Assemble combined artifact (with CNAME and SPA fallbacks)
        run: |
          set -euo pipefail
          rm -rf combined
          mkdir -p combined

          # Root site
          if [ -d output/root ]; then
            rsync -a output/root/ combined/
          fi

          # Prevent Jekyll processing
          touch combined/.nojekyll

          # Ensure custom domain
          echo "aaroonparas.com" > combined/CNAME

          if [ -d output/dev ]; then
            mkdir -p combined/dev
            rsync -a output/dev/ combined/dev/
          fi

          HAS_ROOT_JS=false
          HAS_DEV_JS=false
          if [ -f combined/index.html ]; then
            HAS_ROOT_JS=true
          fi
          if [ -f combined/dev/index.html ]; then
            HAS_DEV_JS=true
          fi

          cat <<'EOF' > combined/.404-template.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Loading…</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      :root {
        color-scheme: light dark;
      }
      body {
        margin: 0;
        min-height: 100vh;
        display: grid;
        place-items: center;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
        padding: 2rem;
        text-align: center;
      }
      h1 {
        font-weight: 600;
        margin-bottom: 0.5rem;
      }
      p {
        margin: 0;
        max-width: 40rem;
      }
    </style>
  </head>
  <body>
    <main>
      <h1>One moment…</h1>
      <p>Loading the requested page. If you are not redirected automatically, please use the navigation links above.</p>
    </main>
    <noscript>
      <p>This site requires JavaScript to render the requested route.</p>
    </noscript>
    <script>
      (function () {
        var hasRoot = __HAS_ROOT__;
        var hasDev = __HAS_DEV__;
        var devBase = '/dev/';
        var originalPath = window.location.pathname || '/';
        var normalizedPath = originalPath;
        if (hasDev && normalizedPath === devBase.slice(0, -1)) {
          normalizedPath = devBase;
        }
        var target = null;
        if (hasDev && normalizedPath.startsWith(devBase)) {
          target = devBase + 'index.html';
        } else if (hasRoot) {
          target = '/index.html';
        }
        if (!target) {
          return;
        }
        if (!window.fetch) {
          window.location.replace(target === devBase + 'index.html' ? devBase : '/');
          return;
        }
        var search = window.location.search || '';
        var hash = window.location.hash || '';
        var finalPath = target === devBase + 'index.html' ? normalizedPath : originalPath;
        if (!finalPath) {
          finalPath = '/';
        }
        var finalUrl = finalPath + search + hash;
        try {
          history.replaceState(null, '', finalUrl);
        } catch (error) {
          /* ignore history errors (e.g., disabled cookies) */
        }
        fetch(target, { cache: 'reload' })
          .then(function (response) {
            if (!response.ok) {
              throw new Error('Failed to fetch ' + target);
            }
            return response.text();
          })
          .then(function (html) {
            document.open();
            document.write(html);
            document.close();
          })
          .catch(function () {
            window.location.replace(target === devBase + 'index.html' ? devBase : '/');
          });
      })();
    </script>
  </body>
</html>
EOF

          sed \
            -e "s/__HAS_ROOT__/$HAS_ROOT_JS/g" \
            -e "s/__HAS_DEV__/$HAS_DEV_JS/g" \
            combined/.404-template.html > combined/404.html
          rm combined/.404-template.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: combined

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary with URLs
        run: |
          echo "### Deployed URLs" >> $GITHUB_STEP_SUMMARY
          echo "- Production: https://aaroonparas.com/" >> $GITHUB_STEP_SUMMARY
          echo "- Development: https://aaroonparas.com/dev/" >> $GITHUB_STEP_SUMMARY
